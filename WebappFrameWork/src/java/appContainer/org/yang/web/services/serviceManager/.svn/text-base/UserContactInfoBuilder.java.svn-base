/* Generated by Together */
package org.yang.web.services.serviceManager;

import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.WebControl;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.jsStyle.UIForm;
import org.yang.web.view.controls.jsStyle.TextField;
import org.yang.web.view.controls.jsStyle.PassElement;
import org.yang.web.view.controls.jsStyle.SelectElement;
import org.yang.web.view.controls.jsStyle.TextAreaElement;
import org.yang.web.view.controls.jsStyle.ButtonElement;
import org.yang.services.accountmgr.User;
import org.yang.web.view.controls.jsStyle.InformationForm;
import org.yang.web.view.controls.jsStyle.WebControlGroup;
import org.yang.web.view.controls.jsStyle.misc.MessageDisplayingBanner1;

public class UserContactInfoBuilder implements WebControlBuilder
{
   public WebControl build(GenericBean bean) throws Exception
   {
      UserInformationBean userBean = (UserInformationBean)bean;
      User user = userBean.getCurrentUser();
      String codeBase = userBean.getAppBase() + userBean.getGuiBase();

      WebControlGroup controlGroup = new WebControlGroup();

      if(GenericBean.ERR==userBean.getState())
      {
         MessageDisplayingBanner1 banner = new MessageDisplayingBanner1();
         banner.setText(userBean.getMsg());//"Some required field is empty, Please submit it again.");
         banner.setColor("#cc0000");
         controlGroup.addASubcontrol(banner);
      }

      InformationForm form = new InformationForm();
      form.setCaption("Basic Information");
      form.setActionLink(userBean.getAppBase() + "/userContact.wf");
      form.setId("userContact");

      ButtonElement save = new ButtonElement();
      save.setAction("javascript:validateForm('userContact','update',reqA)");
      //save.setAction("javascript:submitForm('userContact','update')");
      save.setName("save");
      save.setOffIcon(codeBase + "/images/English/btn_update.gif");
      save.setOnIcon(codeBase + "/images/English/btn_update_on.gif");
      save.setAlt("Update user information");
      form.addAButton(save);

      ButtonElement help = new ButtonElement();
      help.setAction("javascript:top.topFrame.openSWHelpWindow('" + codeBase + "/help/English/help.jsp?right=admin_user.htm#group')");
      help.setName("help");
      help.setOffIcon(codeBase + "/images/English/btn_help.gif");
      help.setOnIcon(codeBase + "/images/English/btn_help_on.gif");
      help.setAlt("Help");
      form.addAButton(help);

      TextField username = new TextField();
      username.setTitle("Username");
      username.setId("username");
      username.setName("userDatas_id");
      username.setValue(user.getID());
      username.setIsReadOnly(true);
      form.addASubcontrol(username);

      String pass = "**********************";
      PassElement password = new PassElement();
      password.setTitle("Password");
      password.setId("pass");
      password.setIsMandatory(true);
      password.setName("userDatas_password");
      password.setValue(pass); // need to be 22 '*'
      form.addASubcontrol(password);

      PassElement confirmpass = new PassElement();
      confirmpass.setTitle("Confirm password &nbsp;&nbsp;");
      confirmpass.setId("confirmpass");
      confirmpass.setIsMandatory(true);
      confirmpass.setName("userDatas_confirmpass");
      confirmpass.setValue(pass); // need to be 22 '*'
      form.addASubcontrol(confirmpass);

      TextField firstname = new TextField();
      firstname.setTitle("First name");
      firstname.setId("firstname");
      firstname.setIsMandatory(true);
      firstname.setName("userDatas_firstname");
      firstname.setValue(user.getFirstName());
      form.addASubcontrol(firstname);

      TextField lastname = new TextField();
      lastname.setTitle("Last name");
      lastname.setId("lastname");
      lastname.setIsMandatory(true);
      lastname.setName("userDatas_lastname");
      lastname.setValue(user.getLastName());
      form.addASubcontrol(lastname);

      TextField address1 = new TextField();
      address1.setTitle("Address 1");
      address1.setId("address1");
      address1.setName("userDatas_address1");
      address1.setValue(user.getAddress1());
      address1.setSize("30");
      form.addASubcontrol(address1);

      TextField address2 = new TextField();
      address2.setTitle("Address 2");
      address2.setId("address2");
      address2.setName("userDatas_address2");
      address2.setValue(user.getAddress2());
      address2.setSize("30");
      form.addASubcontrol(address2);

      TextField city = new TextField();
      city.setTitle("City");
      city.setId("city");
      city.setName("userDatas_city");
      city.setValue(user.getCity());
      city.setSize("25");
      form.addASubcontrol(city);

      TextField state = new TextField();
      state.setTitle("State");
      state.setId("usstate");
      state.setName("userDatas_usstate");
      state.setValue(user.getState());
      state.setSize("25");
      form.addASubcontrol(state);

      TextField post = new TextField();
      post.setTitle("Post Code");
      post.setId("zipcode");
      post.setName("userDatas_zipcode");
      post.setValue(user.getZipCode());
      post.setSize("10");
      post.setMaxLength("10");
      form.addASubcontrol(post);

      TextField country = new TextField();
      country.setTitle("Country");
      country.setId("country");
      country.setName("userDatas_country");
      country.setValue(user.getCountry());
      country.setSize("25");
      form.addASubcontrol(country);

      TextField phone = new TextField();
      phone.setTitle("Telephone number");
      phone.setId("telephonenumber");
      phone.setName("userDatas_telephonenumber");
      phone.setValue(user.getTelephoneNumber());
      phone.setSize("15");
      form.addASubcontrol(phone);

      TextField fax = new TextField();
      fax.setTitle("Fax number");
      fax.setId("faxnumber");
      fax.setName("userDatas_faxnumber");
      fax.setValue(user.getFaxNumber());
      fax.setSize("15");
      form.addASubcontrol(fax);

      TextField mobile = new TextField();
      mobile.setTitle("Mobile number");
      mobile.setId("mobilenumber");
      mobile.setName("userDatas_mobilenumber");
      mobile.setValue(user.getCellphoneNumber());
      mobile.setSize("15");
      form.addASubcontrol(mobile);

      TextField email = new TextField();
      email.setTitle("Email address");
      email.setId("email");
      email.setIsMandatory(true);
      email.setName("userDatas_email");
      email.setValue(user.getEMail());
      email.setSize("25");
      form.addASubcontrol(email);

      SelectElement language = new SelectElement();
      language.setTitle("Language Set");
      language.setId("language");
      language.setName("userDatas_language");
      language.setSelectedValue("English");
      language.setValues(new String[]{"English"});
      form.addASubcontrol(language);

      TextAreaElement description = new TextAreaElement();
      description.setTitle("Description");
      description.setId("description");
      description.setName("userDatas_description");
      description.setValue(user.getDescription());
      form.addASubcontrol(description);

      controlGroup.addASubcontrol(form);
      return controlGroup;
   }
}