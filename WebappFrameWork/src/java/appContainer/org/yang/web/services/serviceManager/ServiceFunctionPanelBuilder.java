/* Generated by Together */
package org.yang.web.services.serviceManager;

import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.WebControl;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.jsStyle.serviceBar.ServiceFunctionPanel;
import org.yang.services.servicemgr.ServiceDescriptor;
import java.util.Iterator;
import org.yang.web.view.controls.jsStyle.serviceBar.ServiceFunction;
import org.yang.web.applicationContainer.PassportBean;

public class ServiceFunctionPanelBuilder implements WebControlBuilder
{
   public WebControl build(GenericBean bean) throws Exception
   {
      PassportBean passportBean = (PassportBean)bean;
      String appBase = passportBean.getSystemProperty("appbase");

      ServiceFunctionPanel panel = null;
      String currentServiceId = passportBean.getCurrentServiceID();
      if(null==(panel=(ServiceFunctionPanel)passportBean.getControl(currentServiceId + ".ServiceFunctionPanel")))
      {
         panel = createPanel(passportBean, appBase);
         passportBean.setControl(currentServiceId + ".ServiceFunctionPanel", panel);
      }

      return panel;
   }

   private ServiceFunctionPanel createPanel(PassportBean passportBean, String appBase)
   {
      ServiceFunctionPanel panel = new ServiceFunctionPanel();
      ServiceDescriptor des = passportBean.getCurrentServiceDescriptor();
      if(null==des)
         return panel;
      Iterator it = des.enviromentParameterKeys().iterator();
      String key = null;
      String text = null;
      String icon = null;
      String link = null;
      String target = null;
      ServiceFunction function = null;
      while(it.hasNext())
      {
         key = (String)it.next();
//System.out.println("===================== key ============" + key);
         if(key.startsWith("ServiceFunction.")&&key.endsWith(".text"))
         {
//System.out.println("============================== key ============" + key);
            text = des.getEnviromentParameter(key);
            key = key.substring(key.indexOf(".") + 1, key.lastIndexOf("."));
            icon = des.getEnviromentParameter("ServiceFunction." + key + ".icon");
            link = des.getEnviromentParameter("ServiceFunction." + key + ".link");
            target = des.getEnviromentParameter("ServiceFunction." + key + ".target");
             
            function = new ServiceFunction();
            function.setText(text);
            function.setActionLink(appBase + link);
            function.setIcon(passportBean.calculateURL(icon));
            if(null!=target&&!"".equals(target))	
                function.setTarget(target);
            panel.addASubcontrol(function);
         }
      }
      return panel;
   }
}