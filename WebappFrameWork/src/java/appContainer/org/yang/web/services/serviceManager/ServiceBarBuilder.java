/* Generated by Together */
package org.yang.web.services.serviceManager;

import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.WebControl;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.jsStyle.UIForm;
import org.yang.web.view.controls.jsStyle.TextField;
import org.yang.web.view.controls.jsStyle.PassElement;
import org.yang.web.view.controls.jsStyle.SelectElement;
import org.yang.web.view.controls.jsStyle.TextAreaElement;
import org.yang.web.view.controls.jsStyle.ButtonElement;
import org.yang.web.view.controls.jsStyle.navigationTree.NavigationNode;
import java.util.Iterator;
import org.yang.services.accountmgr.Group;
import org.yang.services.accountmgr.User;
import org.yang.web.view.controls.jsStyle.navigationTree.NavigationTree;
import java.util.Collection;
import java.util.Map;
import org.yang.services.servicemgr.ServiceDescriptor;
import org.yang.web.services.accountManage.AccountManagerBean;
import org.yang.web.applicationContainer.PassportBean;
import org.yang.web.view.controls.jsStyle.serviceBar.ServiceBar;
import org.yang.web.view.controls.jsStyle.serviceBar.ServiceButton;

public class ServiceBarBuilder implements WebControlBuilder
{
   public WebControl build(GenericBean bean) throws Exception
   {
      PassportBean pass = (PassportBean)bean;

      ServiceBar serviceBar = null;
      if(null==(serviceBar=(ServiceBar)pass.getControl("serviceBar")))
      {
         serviceBar = createServiceBar(pass);
         pass.setControl("serviceBar", serviceBar);
      }

      resetServiceBar(serviceBar, pass);

      return serviceBar;
   }

   private void resetServiceBar(ServiceBar serviceBar, PassportBean pass)
   {
      String appBase = pass.getSystemProperty("appbase");
      String skin    = pass.getSystemProperty("skin");
      String icon = null;
      int status = 0;
      int leftStatus = 0;
      int boundary = 0;
      ServiceButton sb = null;
      ServiceDescriptor[] allServices = pass.getAllServiceDescriptors();
      for(int i=0 ;i<allServices.length; i++)
      {
         sb = (ServiceButton)serviceBar.getSubcontrol(allServices[i].getName());
         if(null==sb)
            continue;

         // disable
         if(allServices[i].getIsDisable())
            status = -1;
         // on
         else if(allServices[i].getIsCurrent())
            status = 1;
         // off
         else
            status = 0;

         if(i<allServices.length-1&&allServices[i+1].getIsCurrent())
            leftStatus = 1;
         else
            leftStatus = 0;

         if(i<allServices.length-2&&
            allServices[i].getGroupIDNumber()!=allServices[i+1].getGroupIDNumber())
            boundary = 1;
         else
            boundary = 0;

         //System.out.println("Service Name        : " + allServices[i].getName());
         //System.out.println("Service isDisable   : " + allServices[i].getIsDisable());
         //System.out.println("Service isCurrent   : " + allServices[i].getIsCurrent());
         //System.out.println("Service Status      : " + status);
         //System.out.println("Service Left Status : " + leftStatus);

         sb.setMyStatus(boundary, status, leftStatus);
      }
      
      serviceBar.setCurrentUser(pass.getUsername());
   }

   private ServiceBar createServiceBar(PassportBean pass)
   {
      String appBase = pass.getSystemProperty("appbase");
      String skin    = pass.getSystemProperty("skin");

//&System.out.println("===================<1>");

      // Shall garantee that we will have valid service? How about conf error?
      ServiceDescriptor[] allServices = pass.getAllServiceDescriptors();
//&System.out.println("===================<2> all services:" + allServices);
//&System.out.println("===================<3> services size:" + allServices.length);

      ServiceBar serviceBar = new ServiceBar();
      serviceBar.setUserInfoLink("/wf/userContact.wf?actiontype=load");
      serviceBar.setAppBase(appBase);
      serviceBar.setSkin(skin);
      ServiceButton[] sb = new ServiceButton[allServices.length];

//&System.out.println("===================<4>");


      for(int i=0 ;i<allServices.length; i++)
      {
         sb[i] = new ServiceButton();

         sb[i].setId(allServices[i].getName());
         sb[i].setCaption(allServices[i].getEnviromentParameter("ServiceBar.Caption"));
         sb[i].setDescription(allServices[i].getEnviromentParameter("ServiceBar.Description"));

         sb[i].setAppbase(appBase);
         sb[i].setSkin(skin);

         sb[i].setDisableIcon(pass.calculateURL(allServices[i].getEnviromentParameter("ServiceBar.Icon.disable")));
         sb[i].setOnIcon(pass.calculateURL(allServices[i].getEnviromentParameter("ServiceBar.Icon.on")));
         sb[i].setOffIcon(pass.calculateURL(allServices[i].getEnviromentParameter("ServiceBar.Icon.off")));

         sb[i].setIconHeight(allServices[i].getEnviromentParameter("ServiceBar.Icon.Height"));
         sb[i].setIconWidth(allServices[i].getEnviromentParameter("ServiceBar.Icon.Width"));

         sb[i].setLink(appBase + allServices[i].getEnviromentParameter("ServiceBar.Icon.link"));

         serviceBar.addASubcontrol(sb[i]);
      }

      return serviceBar;
   }
}