/* Generated by Together */
package org.yang.web.services.accountManage;

import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.WebControl;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.jsStyle.UISelector;
import org.yang.web.view.controls.jsStyle.ButtonElement;
import org.yang.services.accountmgr.Group;
import org.yang.web.applicationContainer.SelectorItem;
import org.yang.web.view.controls.jsStyle.DummyControl;

public class UserGroupInfoBuilder implements WebControlBuilder
{
   public WebControl build(GenericBean bean) throws Exception
   {
      UserBean userBean = (UserBean)bean;

      if("clear".equals(userBean.getLastActiontype()))
      {
         return new DummyControl();
      }

      String codeBase = userBean.getAppBase() + userBean.getGuiBase();

      UISelector selector = new UISelector();
      selector.setName("groups");
      selector.setNote("grpops");
      selector.setCaption("Groups");
      selector.setNote("Note: If you remove a user from a group and they are currently logged in, they will be logged out of the system.");
      selector.setAddIcon(codeBase + "/images/right_arrow.gif");
      selector.setAddAction("javascript:validateForm('user_form','selectGroups',reqA)");
      selector.setAddCaption("Join groups");
      selector.setSelectedBoxCaption("Member Of:");
      selector.setRemoveIcon(codeBase + "/images/left_arrow.gif");
      selector.setRemoveAction("javascript:validateForm('user_form','deselectGroups',reqA)");
      selector.setRemoveCaption("Leave groups");
      selector.setUnselectedBoxCaption("Not a Member Of:");

      Group[] myGroups = userBean.getMyGroups();
      SelectorItem[] items = new SelectorItem[myGroups.length];
      for(int i=0; i<myGroups.length; i++)
      {
         items[i] = new SelectorItem();
         items[i].setId(myGroups[i].getID());
         items[i].setValue(myGroups[i].getID());
      }
      selector.setSelectedItems(items);

      Group[] notMyGroup = userBean.getNotMyGroups();
      items = new SelectorItem[notMyGroup.length];
      for(int i=0; i<notMyGroup.length; i++)
      {
         items[i] = new SelectorItem();
         items[i].setId(notMyGroup[i].getID());
         items[i].setValue(notMyGroup[i].getID());
      }
      selector.setUnselectedItems(items);

      ButtonElement help = new ButtonElement();
      help.setAction("javascript:top.topFrame.openSWHelpWindow('" + codeBase + "/help/English/help.jsp?right=admin_user.htm#group')");
      help.setName("help");
      help.setOffIcon(codeBase + "/images/English/btn_help.gif");
      help.setOnIcon(codeBase + "/images/English/btn_help_on.gif");
      help.setAlt("Help");
      selector.addAButton(help);
      return selector;
   }
}