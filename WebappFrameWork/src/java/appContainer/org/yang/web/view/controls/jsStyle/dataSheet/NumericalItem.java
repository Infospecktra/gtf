/* Generated by Together */
package org.yang.web.view.controls.jsStyle.dataSheet;

import org.yang.web.view.controls.WebControl;
import javax.servlet.jsp.JspWriter;
import java.text.DecimalFormat;

/**
 * @testcase org.test.org.yang.web.view.controls.jsStyle.TestListItem 
 */
public class NumericalItem extends TextTypeItem
{
   protected Number value = null;
   public void setValue(Number value) { this.value = value; }

   protected String color = "#000000";
   public void setColor(String color) { this.color = color; }

   protected boolean bold = false;
   public void setBold(boolean bold) { this.bold = bold; }

   protected String formatPattern = null;
   public void setFormatPattern(String formatPattern) { this.formatPattern = formatPattern; }

   public NumericalItem()
   {
      super();
   }

   public void render(JspWriter writer) throws Exception
   {
      writer.print("<td nowrap class=\"smaller\" ");
      if(isHighlight&&(null!=highlightColor))
      {
         writer.print(" bgcolor=\"" + highlightColor + "\"");
      }
      else
      {
         if(null!=bgcolor)
            writer.print(" bgcolor=\"" + bgcolor + "\"");
      }
      writer.print(" >");
      if(bold)
         writer.print("<b>");
      if(blink)
         writer.print("<blink>");
      writer.print("<font color=\"" + color + "\">");

      if(null!=actionLink)
         writer.print("<a href=\"" + actionLink + "\" target=\"" + actionTarget + "\" >");

      if(null==value)
         writer.print(dataNAText);
      else
      {
         String sValue = null;
         if((null!=formatPattern)&&(value instanceof Double))
         {
            sValue = new DecimalFormat(formatPattern).format(value.doubleValue());
         }
         else
         {
            sValue = value.toString();
         }
         writer.print(sValue);
      }
      if(null!=actionLink)
         writer.print("</a>");

      writer.print("</font>");
      if(blink)
         writer.print("</blink>");
      if(bold)
         writer.print("</b>");
      writer.print("</td>");
   }

   public int compareTo(Object object)
   {
      try
      {
         return ((Comparable)value).compareTo(((NumericalItem)object).value);
      }
      catch(Exception e)
      {
         e.printStackTrace();
         return 0;
      }
   }
}