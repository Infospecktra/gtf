/* Generated by Together */

package org.yang.web.view.controls.jsStyle;
import javax.servlet.jsp.JspWriter;
import java.util.Date;
import java.util.Calendar;

public class DateField extends FormElement 
{
   Calendar calendar = null;

   private SelectElement yearUI  = null;
   private SelectElement monthUI = null;
   private SelectElement dateUI   = null;

   private String id = null;
   public void setId(String id) { this.id = id; }

   private String name = null;
   public void setName(String name) { this.name = name; }

   private boolean isYearFirst = true;
   public void setIsYearFirst(boolean isYearFirst) { this.isYearFirst = isYearFirst; }

   private boolean prefixOn = false;
   public void setPrefixOn(boolean prefixOn) { this.prefixOn = prefixOn; }

   private String onChangeLink = null;
   public void setOnChangeLink(String onChangeLink) { this.onChangeLink = onChangeLink; }

   private int year = 1900;
   public void setYear(int year) { this.year = year; }

   private int maxYear = 10;
   public void setMaxYaer() { this.maxYear = maxYear;}

   private int month = 0;
   public void setMonth(int month) { this.month = month; }

   private int maxMonth = 12;

   private int date = 1;
   public void setDate(int date) { this.date = date; }

   private int maxDate = 30;

   private boolean displayOnly = false;
   public void setDisplayOnly(boolean displayOnly) { this.displayOnly = displayOnly; }

   private boolean disable = false;
   public void setDisable(boolean disable) { this.disable = disable; }

   public DateField()
   {
      calendar = Calendar.getInstance();
      yearUI = new SelectElement();
      monthUI = new SelectElement();
      dateUI = new SelectElement();
   }

   protected void printBody(JspWriter writer) throws Exception
   {
      try
      {
         if(disable)
         {
            writer.print("<b><font color = \"#000000\">Date has not set yet</font></b>");
            return;
         }

         if(prefixOn)
         {
            yearUI.setId(id + "_year");
            yearUI.setName(id + "_year");

            monthUI.setId(id + "_month");
            monthUI.setName(id + "_month");

            dateUI.setId(id + "_date");
            dateUI.setName(id + "_date");
         }
         else
         {
            yearUI.setId("year");
            yearUI.setName("year");

            monthUI.setId("month");
            monthUI.setName("month");

            dateUI.setId("date");
            dateUI.setName("date");
         }

         calendar.set(year, month, date);
         String[] years = new String[maxYear];
         int i=0;
         for(i=0; i<maxYear; i++)
            years[i] = String.valueOf(year+i);
         yearUI.setDoSort(false);
         yearUI.setDisplayNames(years);
         yearUI.setValues(years);
         yearUI.setSelectedValue(String.valueOf(year));
         yearUI.setOnChange(onChangeLink);

         String[] monthsD = new String[maxMonth];
         String[] monthsV = new String[maxMonth];
         for(i=0; i<maxMonth; i++)
         {
            monthsD[i] = String.valueOf(i+1);
            monthsV[i] = String.valueOf(i);
         }
         monthUI.setDoSort(false);
         monthUI.setDisplayNames(monthsD);
         monthUI.setValues(monthsV);
         monthUI.setSelectedValue(String.valueOf(month));
         monthUI.setOnChange(onChangeLink);

         maxDate = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
         String[] dates = new String[maxDate];
         for(i=0; i<maxDate; i++)
            dates[i] = String.valueOf(i+1);
         dateUI.setDoSort(false);
         dateUI.setDisplayNames(dates);
         dateUI.setValues(dates);
         dateUI.setSelectedValue(String.valueOf(date));
         dateUI.setOnChange(onChangeLink);
      }
      catch(Exception e)
      {

      }

      if(isYearFirst)
      {
         yearUI.setDisplayOnly(displayOnly);
         yearUI.printBody(writer);
         writer.print("<b><font color = \"#000000\">/</font></b>");
      }

      monthUI.setDisplayOnly(displayOnly);
      monthUI.printBody(writer);
      writer.print("<b><font color = \"#000000\">/</font></b>");
      dateUI.setDisplayOnly(displayOnly);
      dateUI.printBody(writer);

      if(!isYearFirst)
      {
         writer.print("<b><font color = \"#000000\">/</font></b>");
         yearUI.setDisplayOnly(displayOnly);
         yearUI.printBody(writer);
      }

      if(!displayOnly)
      {
         if(isYearFirst)
            writer.print("<b><font color = \"#000000\">(yyyy/mm/dd)</font></b>");
         else
            writer.print("<b><font color = \"#000000\">(mm/dd/yyyy)</font></b>");
      }
   }
}