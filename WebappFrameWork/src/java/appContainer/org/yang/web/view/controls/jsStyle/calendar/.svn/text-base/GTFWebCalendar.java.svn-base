/* Generated by Together */
package org.yang.web.view.controls.jsStyle.calendar;

import org.yang.web.view.controls.WebControl;
import javax.servlet.jsp.JspWriter;
import java.util.Date;
import java.util.Calendar;
import org.yang.util.DateFormatter;

/**
 * @testcase org.test.org.yang.web.view.controls.jsStyle.TestNavigationList 
 */
abstract public class GTFWebCalendar extends WebCalendar
{
   public static final int YEARLY  = 0;
   public static final int MONTHLY = 1;
   public static final int DAILY   = 2;

   private String id = null;
   public void setId(String id) { this.id = id; }
   public String getId() { return id; }

   protected String codeBase = null;
   public void setCodeBase(String codeBase) { this.codeBase = codeBase; }

   protected String actionLink = null;
   public void setActionLink(String actionLink) { this.actionLink = actionLink; }
   public String getActionLink() { return actionLink; }

   protected String switchTimeActionLink = null;
   public void setSwitchTimeActionLink(String switchTimeActionLink) { this.switchTimeActionLink = switchTimeActionLink; }
   public String getSwitchTimeActionLink() { return switchTimeActionLink; }

   protected String switchViewLink = null;
   public void setSwitchViewLink(String switchViewLink) { this.switchViewLink = switchViewLink; }
   public String getSwitchViewLink() { return switchViewLink; }

   protected String forwardActionLink = null;
   public void setForwardActionLink(String forwardActionLink) { this.forwardActionLink = forwardActionLink; }
   public String getForwardActionLink() { return forwardActionLink; }

   protected String backwardActionLink = null;
   public void setBackwardActionLink(String backwardActionLink) { this.backwardActionLink = backwardActionLink; }
   public String getBackwardActionLink() { return backwardActionLink; }

   protected int type = 0;
   public void setType(int type) { this.type = type; }
   public int getType() { return type; }

   protected int displayedMonth = -1;
   public void setDisplayedMonth(int displayedMonth){ this.displayedMonth = displayedMonth; }
   public int getDisplayedMonth(){ return displayedMonth; }

   protected int displayedYear = -1;
   public void setDisplayedYear(int displayedYear){ this.displayedYear = displayedYear; }
   public int getDisplayedYear(){ return displayedYear; }

   protected int displayedDay = -1;
   public void setDisplayedDay(int displayedDay){ this.displayedDay = displayedDay; }
   public int getDisplayedDay(){ return displayedDay; }

   public GTFWebCalendar()
   {
      super();
   }

   public static WebCalendar create(int type)
   {
      switch(type)
      {
         case 0: return new GTFWebCalendarYearly();
         case 1: return new GTFWebCalendarMonthly();
         case 2: return new GTFWebCalendarDaily();
      }
      return null;
   }

   public void render(JspWriter writer) throws Exception
   {
      writer.println( "	     <table width=\"100%\" border=\"1\" cellspacing=\"0\" cellpadding=\"3\" bordercolorlight=\"#cccccc\" bordercolor=\"#cccccc\"");
      writer.println( "			bordercolordark=\"#ffffff\" bgcolor=\"#eaeaea\" align=\"center\">");
      writer.println( "         <tr>");
      writer.println( "            <td align=\"center\" class=\"smallest\">");
      writer.println( "               <A href=\"" + switchViewLink + "&amp;calendarView=0\">Yearly</A> | ");
      writer.println( "               <A href=\"" + switchViewLink + "&amp;calendarView=1\">Monthly</A> | ");
      writer.println( "               <A href=\"" + switchViewLink + "&amp;calendarView=2\">Daily</A>");
      writer.println( "            </td>");
      writer.println( "			</tr>");

      printBody(writer);

      writer.println( "      </table>");
   }

   abstract protected void printBody(JspWriter writer) throws Exception;
}