/* Generated by Together */
package org.yang.web.view.controls.jsStyle.dataSheet;

import org.yang.web.view.controls.WebControl;
import javax.servlet.jsp.JspWriter;

/**
 * @testcase org.test.org.yang.web.view.controls.jsStyle.TestListItem 
 */
public class TextItem extends TextTypeItem
{
   protected String text = null;
   public void setText(String text) { this.text = text; if(null!=text) this.texts = new String[]{text}; }

   protected String[] texts = null;
   public void setTexts(String[] texts) { this.texts = texts; }

   protected String color = "#000000";
   public void setColor(String color) { this.color = color; }

   protected String onChange = null;
   public void setOnChange(String onChange) { this.onChange = onChange; }

   protected int size = 5;
   public void setSize(int size) { this.size = size; }

   protected boolean bold = false;
   public void setBold(boolean bold) { this.bold = bold; }

   public TextItem()
   {
      super();
   }

   public void render(JspWriter writer) throws Exception
   {
     if(!isReadOnly&&null!=onChange)
     {
        writer.print("<form  name=\"" + this.id + "\" action=\"" + this.actionLink + "\" method=\"post\" id=\"" + this.id + "\">");
        writer.print("<input type=\"hidden\" name=\"actiontype\" value=\"\" id=\"actiontype.hidden\">");
     }
     writer.print("<td nowrap class=\"smaller\" ");
     if(isHighlight&&(null!=highlightColor))
     {
           writer.print(" bgcolor=\"" + highlightColor + "\"");
     }
     else
     {
        if(null!=bgcolor)
           writer.print(" bgcolor=\"" + bgcolor + "\"");
     }
     writer.print(" >");
     if(bold)
        writer.print("<b>");
     if(blink)
        writer.print("<blink>");

     writer.print("<font color=\"" + color + "\">");

     if(isReadOnly)
     {
        for(int i=0; i<texts.length; i++)
        {
           if(1<texts.length)
              writer.print("<p>");
           if(null!=actionLink)
           {
              if(null!= actionTarget&&!"".equals( actionTarget))
			      writer.print("<a href=\"" + actionLink + "\" target=\"" + actionTarget + "\"");
              else
			      writer.print("<a href=\"" + actionLink + "\"");

			  if(null!=altText)
                 writer.print(" title=\"" + altText + "\"");
              writer.print(" >");
           }
           writer.print(texts[i]);
           if(null!=actionLink)
              writer.print("</a>");
           if(1<texts.length)
              writer.print("</p>");
        }
     }
     else
     {
        writer.print("    <input type  = \"text\"");
        if(null!=onChange)
           writer.print("           onchange = \"" + onChange + "\"");
        writer.print("           size  = \"" + size + "\"");
        writer.print("           name  = \"" + id + "\"");
        writer.print("           value = \"" + text + "\">");
     }

     writer.print("</font>");
     if(blink)
        writer.print("</blink>");
     if(bold)
        writer.print("</b>");
     writer.print("</td>");
     if(!isReadOnly&&null!=onChange)
        writer.print("</form>");
   }


   public int compareTo(Object object)
   {
      try
      {
         String target = null;
         String myTarget = null;
         if(!isReadOnly&&null!=onChange)
         {
            target = ((TextItem)object).text;
            myTarget = text;
         }
         else
         {
            target = ((TextItem)object).texts[0];
            myTarget = texts[0];
         }
         //&System.out.println("[TextItem::compareTo] Compare->" + myTarget + ":" + target);
         return myTarget.compareToIgnoreCase(target);
      }
      catch(Exception e)
      {
         e.printStackTrace();
         return 0;
      }
   }
}