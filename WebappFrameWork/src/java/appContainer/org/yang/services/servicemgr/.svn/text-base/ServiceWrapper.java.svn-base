/* Generated by Together */

package org.yang.services.servicemgr;
import java.util.Properties;
import java.util.Set;
import java.util.HashSet;
import org.yang.web.applicationContainer.Passport;

public abstract class ServiceWrapper implements ServiceDescriptor
{
    protected Properties enviroment = null;
    public void setEnviromentParameter(String key, String val) { enviroment.put(key, val); }
    public String getEnviromentParameter(String key) { return (String)enviroment.get(key); }

    protected String name = null;
    public void setName(String name) { this.name = name; }
    public String getName() { return name; }

    protected String className = null;
    public void setClassName(String className) { this.className = className;}
    public String getClassName() { return className; }

    protected String type = null;
    public void setType(String type) { this.type = type; }
    public String getType() { return type; }

    protected boolean isDisable = false;
    public void setIsDisable(boolean isDisable) { this.isDisable = isDisable; }
    public boolean getIsDisable() { return isDisable; }

    protected boolean isCurrent = false;
    public void setIsCurrent(boolean isCurrent) { this.isCurrent = isCurrent;}
    public boolean getIsCurrent() { return isCurrent; }

    protected int groupIDNumber = 0;
    public void setGroupIDNumber(int groupIDNumber) { this.groupIDNumber = groupIDNumber; }
    public int getGroupIDNumber() { return groupIDNumber; }

    public Set enviromentParameterKeys()
    {
       Set keys = enviroment.keySet();
       if(null!=keys)
          return keys;
       else
          return new HashSet();
    }

    public ServiceWrapper()
    {
       enviroment = new Properties();
    }

    public void initialize(Properties prop, Passport passport)
    {
       //&System.out.println("[ServiceWrapper::initialize] Shall implement this method : class = " + this.getClass().getName());
    }

    public Service getServiceInstance(String domain, Passport passport)
    {
       Service service = createServiceInstance(domain);
       service.initialize(enviroment, passport);
       return service;
    }

    public abstract Service createServiceInstance(String domain);
}
