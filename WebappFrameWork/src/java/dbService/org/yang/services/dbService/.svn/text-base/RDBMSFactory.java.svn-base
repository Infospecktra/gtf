/* Generated by Together */

package org.yang.services.dbService;

import java.util.Hashtable;
import org.yang.services.config.Config;

/**
 * @testcase org.test.org.yang.services.dbService.TestRDBMSFactory 
 */
public class RDBMSFactory
{
   private static Hashtable RDBMSMap = new Hashtable();
   private static RDBMSFactory myInstance = null;

   protected RDBMSFactory(){}
   
   public static RDBMSFactory getInstance()
   {
      if(null==myInstance)
      {
         synchronized(RDBMSMap)
         {
            if(null==myInstance)
            {
               myInstance = new RDBMSFactory();	
            }	
         }
      }
      
      return myInstance;
   }

   public RDBMS getSystemRDBMS()
   {
      return getRDBMS(Config.getInstance().SYSTEMDB);
   }

   public RDBMS getDataRDBMS()
   {
      return getRDBMS(Config.getInstance().DATADB);
   }

   public RDBMS getRDBMS(String jndiName, Hashtable jndiProp)
   {
      RDBMS rdbms = null;
      if(null==(rdbms=findRDBMS(jndiName)))
      {
         synchronized(RDBMSMap)
         {
            if(null==rdbms)
            {
               rdbms = createRDBMS(jndiName, jndiProp);
               RDBMSMap.put(jndiName, rdbms);
            }
         }
      }

      //System.out.println("Print out the SMRDBM:" + rdbms);
      return rdbms;
   }

   public RDBMS getRDBMS(String jndiName)
   {
      RDBMS rdbms = null;
      if(null==(rdbms=findRDBMS(jndiName)))
      {
         synchronized(RDBMSMap)
         {
            if(null==rdbms)
            {
               rdbms = createRDBMS(jndiName);
               RDBMSMap.put(jndiName, rdbms);
            }
         }
      }

      //System.out.println("Print out the SMRDBM:" + rdbms);
      return rdbms;
   }

   //Added by Celina Yang 
   public RDBMS getRDBMS(String dburl,String dbUser,String dbPassword ,String jdbcDriver)
   {        
      return createRDBMS(dburl,dbUser,dbPassword ,jdbcDriver);  
   }
   
   //Added by Celina Yang    
   private RDBMS createRDBMS(String dburl,String dbUser,String dbPassword ,String jdbcDriver)
   {
      return new SimpleRDBMSImpl(dburl,dbUser,dbPassword ,jdbcDriver);
   }

   //Added by Steven Yang
   private RDBMS getRDBMS(Object client, String dburl,String dbUser,String dbPassword ,String jdbcDriver)
   {
      return createRDBMS(dburl,dbUser,dbPassword ,jdbcDriver);
   }

   private RDBMS createRDBMS(String jndiName)
   {
      try
      {	
          return new SimpleRDBMSImpl(jndiName);
      }
      catch(Exception e)
      {
          //throw new DataAccessException(e.getMessage());	
          return null;
      } 
   }

   private RDBMS createRDBMS(String jndiName, Hashtable jndiProp)
   {
      try
      {	
          return new SimpleRDBMSImpl(jndiName, jndiProp);
      }
      catch(Exception e)   
      {
          //throw new DataAccessException(e.getMessage());	
          return null;
      } 
   }

   private RDBMS findRDBMS(String jndiName)
   {
      return (RDBMS)RDBMSMap.get(jndiName);
   }
}
