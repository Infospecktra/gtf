/* Generated by Together */

package org.yang.services.messageBus.IMS;

import org.yang.services.messageBus.Route;
import org.yang.services.messageBus.MessageTransmitter;
import org.yang.services.messageBus.InitException;
import org.yang.services.messageBus.MessageReceiver;
import org.yang.services.messageBus.MessageTrancieverFactory;

public class IMSTrancieverFactoryImpl extends MessageTrancieverFactory
{
   public IMSTrancieverFactoryImpl() {}

   public boolean createRoute(Route rt)
   {
      return false;
   }

   public boolean deleteRoute(Route rt)
   {
      return false;
   }

   public MessageTransmitter createTransmitter(Route rt) throws InitException
   {
      try
      {
         return new IMSTransmitterImpl(rt);
      }
      catch(Exception e)
      {
         throw new InitException(e.getMessage());
      }
   }

   public MessageReceiver createReceiver(String hostName, String id, Route rt, MessageReceiver receiver) throws InitException
   {
      boolean isListener = true;

      String type = rt.getType();
      if(-1!=type.indexOf("-g"))
         isListener = false;

      try
      {
         if(isListener)
         {
            IMSReceiverImpl rec = new IMSReceiverImpl(id, rt, receiver);
            if(-1!=type.indexOf("-sync"))
            {
               rec.setIsSync(true);
               //System.out.println("[IMSTrancieverFactoryImpl::createReceiver] Create synchronus receiver. ");
            }
            else
            {
               //System.out.println("[IMSTrancieverFactoryImpl::createReceiver] Create asynchronus receiver. ");
            }

            return rec;
         }
         else
            return new IMSReceiverImpl(id, rt, null);
      }
      catch(Exception e)
      {
         throw new InitException(e.getMessage());
      }
   }
}