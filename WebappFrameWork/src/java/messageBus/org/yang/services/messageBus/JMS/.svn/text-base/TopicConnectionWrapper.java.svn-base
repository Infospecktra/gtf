/* Generated by Together */

package org.yang.services.messageBus.JMS;

import javax.jms.Session;
import javax.jms.TopicConnection;
import java.util.Hashtable;
import javax.naming.NamingException;

public class TopicConnectionWrapper extends ConnectionWrapper
{
   static final long serialVersionUID = 3439544523980252199L;

   public TopicConnectionWrapper(JMSAdaptor adaptor) throws javax.jms.JMSException
   {
      super(adaptor);
      super.setConnection(JMSHelper.createTopicConnection(userID,
                                                          userPasswd,
                                                          factoryJNDI,
                                                          jndi_Props));
   }

   public boolean resumeConnection()
   {
      try
      {
         super.setConnection(JMSHelper.createTopicConnection(userID,
                                                             userPasswd,
                                                             factoryJNDI,
                                                             jndi_Props));
      }
      catch(Exception e)
      {
         return false;
      }

      return true;
   }

   public Session getSession(boolean shareSession, String id)
   {
      Session session = null;
      if(shareSession)
      {
         if(null==(session=(Session)this.sessions.get(this.SHARED_SESSION)))
         {
            synchronized(this)
            {
               if(null==(session=(Session)this.sessions.get(this.SHARED_SESSION)))
               {
                  session = createSession();
                  sessions.put(this.SHARED_SESSION, session);
               }
            }
         }
      }
      else
      {
         if(null==(session=(Session)this.sessions.get(id)))
         {
            session = createSession();
            sessions.put(id, session);
         }
      }

      return session;
   }

   private Session createSession()
   {
      try
      {
         Session session = null;
         try
         {
            if(null!=conn)
               session = ((TopicConnection)conn).createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
         }
         catch(Exception e)
         {
            e.printStackTrace();
         }
         return session;
      }
      catch(Exception e)
      {
         //e.printStackTrace();
         log.error(e);
         return null;
      }
   }
}