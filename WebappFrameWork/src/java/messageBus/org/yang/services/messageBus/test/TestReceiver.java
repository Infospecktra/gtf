/* Generated by Together */

package org.yang.services.messageBus.test;

import java.util.HashMap;
import java.util.Properties;
import java.io.Serializable;
import java.io.IOException;
import org.yang.services.messageBus.MessageReceiver;
import org.yang.services.messageBus.Message;
import org.yang.services.messageBus.MessageBus;
import org.yang.services.messageBus.DataReceivingException;

class TestReceiver implements MessageReceiver
{
   TestReceiver(String site, String channel)
   {
      setSite(site);
      setChannel(channel);
   }

   private String site = null;
   public void setSite(String site) { this.site=site; }
   public String getSite() { return site; }

   private String channel = null;
   public void setChannel(String channel) { this.channel=channel; }
   public String getChannel() { return channel; }

   public void setRealReceiver(MessageReceiver receiver) {}

   public void onMessage(Message msg)
   {
      System.out.println("I got a message -> " + msg.getPayload());
   }

   public Message getMessage(long timeout) throws DataReceivingException { return null;}

   public Message getMessage() throws DataReceivingException { return null; }

   public void closeSession(boolean b) {}

   public int getMessageCount() { return 0; }

   public static void main(String[] argc)
   {
      Properties env = new Properties();
      env.setProperty(MessageBus.BUS_CLASS, "com.IMDSTrading.GHMessageBus.GHMessageBusImpl");
      env.setProperty(MessageBus.ROUTE_MAP, "GHMessageRoute.xml");
      MessageBus bus = MessageBus.getMessageBus(env);

      try
      {
         bus.registerReceiver(new TestReceiver("MDE", "test"));
         Message msg = MessageBus.createMessage();
         msg.setSender("MDE");
         msg.setRoute("test");
         msg.setPayload("ok");
         bus.getTransmitter().transmit(msg);
      }catch(Exception e) { e.printStackTrace(); }
   }
}