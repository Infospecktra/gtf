/* Generated by Together */

package org.yang.services.messageBus;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Properties;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Properties;
import javax.naming.Referenceable;
import javax.jms.ExceptionListener;
import javax.naming.NamingException;
import java.io.IOException;
import org.yang.util.xml.XMLHelper;
import org.w3c.dom.Node;
import org.w3c.dom.NamedNodeMap;
import org.apache.log4j.Category;
import org.yang.util.SMUtility;
import java.util.HashSet;
import org.yang.util.template.KeywordMapper;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;

public class MessageBusHelper 
{
   public MessageBusHelper() {}

   static public Route[] loadRoutesFile(InputStream is)
   {
      ArrayList temp = null;
      try
      {
         if(null==is)
         {
            throw new NoRoutingTableException("input stream is not null.");
         }

         Node mappings = XMLHelper.read(is);
         temp = XMLHelper.getNodesFromDocument(mappings, "/map/route");
      }
      catch(Exception e)
      {
         e.printStackTrace();
      }
      finally
      {
         try
         {
            is.close();
         }
         catch(Exception e)
         {}
      }

      try
      {
         return loadRoutes(temp);
      } catch(Exception e) { e.printStackTrace(); }
      return new Route[0];
   }

   static private Route[] loadRoutes(ArrayList uris) throws NoRoutingTableException, Exception
   {
      HashSet routeSet = new HashSet();
      try
      {
         Route rt = null;
         for(int i=0; i<uris.size(); i++)
         {
            String uriPath = null;
            String actionHandler = null;
            Node uri = (Node)uris.get(i);
            NamedNodeMap atts = uri.getAttributes();

      	    if(null==atts)
      	    {
  	          throw new Exception("Error when loading route : route attributes are missing.");
      	    }

            try
            {
      	       Node type     = atts.getNamedItem("type");
               Node typeDes  = null;
               if(null==(typeDes=atts.getNamedItem("typeDes")))
                  typeDes  = atts.getNamedItem("note");
               Node name     = atts.getNamedItem("name");
      	       Node sender   = atts.getNamedItem("sender");
               Node receiver = atts.getNamedItem("receiver");
               Node tranciever = atts.getNamedItem("trancieverFactory");

      	       if(null==type||null==name||null==sender||null==receiver||null==tranciever)
      	       {
      	          throw new Exception("Error when loading route : missing important attributes.");
      	       }

               rt = new Route();
               rt.setType(type.getNodeValue());
               rt.setTypeDes(typeDes.getNodeValue());
               rt.setName(name.getNodeValue());
               rt.setSender(sender.getNodeValue());
               rt.setReceiver(receiver.getNodeValue());
               rt.setTrancieverFactory(tranciever.getNodeValue());

               ArrayList props = XMLHelper.getNodesFromDocument(uri, "property");
               for(int j=0; j<props.size(); j++)
               {
                  Node prop = (Node)props.get(j);
                  NamedNodeMap patts = prop.getAttributes();
    	          if(null==patts)
      	          {
      	             break;
      	          }

                  Node pName = patts.getNamedItem("name");
                  Node pValue = patts.getNamedItem("value");

      	          if(null==pName||null==pValue)
      	          {
      	             break;
      	          }

                  rt.setProperty(pName.getNodeValue(), pValue.getNodeValue());
               }

               Iterator it = routeSet.iterator();
               boolean isExist = false;
               while(it.hasNext())
               {
                  if(rt.equals(it.next()))
                  {
                     isExist = true;
                     break;
                  }
               }
               if(!isExist)
                  routeSet.add(rt);
            }
            catch(Exception e)
            {
               System.out.println("[MessageBusHelper::loadRoute] Unable to read routing table:" + e.toString());
            }
         }
      }
      catch(Exception e)
      {
         e.printStackTrace();
         throw new Exception("Load table failis!" + e.toString());
      }

      return (Route[])routeSet.toArray(new Route[]{});
   }
}