/* Generated by Together */

package org.yang.services.messageBus.JMS;

import java.util.Properties;
import javax.jms.MessageListener;
import javax.naming.NamingException;
import org.yang.services.messageBus.InitException;
import java.util.Hashtable;
import javax.jms.JMSException;
import javax.naming.Context;
import org.apache.log4j.Category;

public abstract class JMSAdaptor
{
   static final long serialVersionUID = 3439536529489452199L;

   transient protected Category log = null;

   public static final String INIT_CONTEXT_FACTORY  = "factory";
   public static final String PROVIDER_URL          = "provider-url";
   public static final String URL_PKG_PREFIXES      = "pkg-prefixes";
   public static final String CON_FAC_JNDI          = "jndi-name";
   public static final String USER_ID               = "user-id";
   public static final String USER_PASSWD           = "user-pass";
   public static final String CLIENT_ID             = "client-id";

   public static final String QUEUE_NAME            = "queue";
   public static final String TOPIC_NAME            = "topic";

   private String id = null;
   public void setId(String id) { this.id=id; }
   public String getId(){ return id; }

   protected Hashtable jndi_props  = null;
   public Hashtable getJndi_Props() { return jndi_props; }

   protected String factoryJNDI = null;
   public String getFactoryJNDI() { return factoryJNDI; }

   protected String userID = null;
   public String getUserID() { return userID; }

   protected String userPasswd = null;
   public String getUserPasswd() { return userPasswd; }

   protected String clientID = null;
   public String getClientID() { return clientID; }

   protected String connUID = null;
   public String getConnUID() { return connUID; }

   public JMSAdaptor() throws InitException {}

   public JMSAdaptor(Properties prop) throws InitException
   {
      try
      {
         log = Category.getInstance(this.getClass());

         factoryJNDI    = prop.getProperty(CON_FAC_JNDI, "");
         userID         = prop.getProperty(USER_ID);                   
         userPasswd     = prop.getProperty(USER_PASSWD);         
         clientID       = prop.getProperty(CLIENT_ID);                 

         String initContextFac = prop.getProperty(INIT_CONTEXT_FACTORY, "");
         String providerURL    = prop.getProperty(PROVIDER_URL, "");
         String urlPkgPrefixes = prop.getProperty(URL_PKG_PREFIXES, "");

         jndi_props = new Hashtable();
         jndi_props.put(Context.INITIAL_CONTEXT_FACTORY, initContextFac);
         jndi_props.put(Context.PROVIDER_URL, providerURL);
         jndi_props.put("java.naming.rmi.security.manager", "yes");
         jndi_props.put(Context.URL_PKG_PREFIXES, urlPkgPrefixes);

         if(null!=userID&&null!=userPasswd&&!isProvider())
            connUID = providerURL+"_"+userID+"_"+userPasswd;
         else
            connUID = providerURL;

         System.out.println("[JMSAdaptor] connUID      : " + connUID);
         System.out.println("[JMSAdaptor] Factory JNDI : " + factoryJNDI);
         System.out.println("[JMSAdaptor] User ID      : " + userID);
         System.out.println("[JMSAdaptor] User PassWord: " + userPasswd);
         System.out.println("[JMSAdaptor] Client ID    : " + clientID);
         System.out.println("[JMSAdaptor] Initcontext  : " + initContextFac);
         System.out.println("[JMSAdaptor] Provider URL : " + providerURL);
         System.out.println("[JMSAdaptor] PKG prefix   : " + urlPkgPrefixes);
      }
      catch(Exception e)
      {
         throw new InitException("JMSAdapter : " + e.getMessage());	
      }
   }

   abstract public boolean isProvider();

   abstract protected void resume() throws NamingException, InitException;

   abstract  public void closeSession() throws JMSException;
}