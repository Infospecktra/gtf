/* Generated by Together */
package org.yang.customized.gtf.services.reportManager.web;

import org.yang.web.view.controls.WebControl;
import javax.servlet.jsp.JspWriter;
import java.util.Date;
import java.util.Calendar;
import org.yang.util.DateFormatter;
import org.yang.web.view.controls.jsStyle.SelectElement;
import org.yang.web.view.controls.jsStyle.CheckBoxes;
import org.yang.web.view.controls.jsStyle.calendar.WebCalendar;
import org.yang.web.view.controls.jsStyle.CheckBoxGroup;

/**
 * @testcase org.test.org.yang.web.view.controls.jsStyle.TestNavigationList 
 */
public class ReportsBrowsingControl extends WebControl
{
   private static String[] browseBy = {"year", "month", "date"};

   private String id = null;
   public void setId(String id) { this.id = id; }
   public String getId() { return id; }

   protected String actionLink = null;
   public void setActionLink(String actionLink) { this.actionLink = actionLink; }
   public String getActionLink() { return actionLink; }

   protected int view = WebCalendar.DAILY;
   public void setView(int view) { this.view = view; }
   public int getView() { return view; }

   protected String switchTimeActionLink = null;
   public void setSwitchTimeActionLink(String switchTimeActionLink) { this.switchTimeActionLink = switchTimeActionLink; }
   public String getSwitchTimeActionLink() { return switchTimeActionLink; }

   protected String switchViewLink = null;
   public void setSwitchViewLink(String switchViewLink) { this.switchViewLink = switchViewLink; }
   public String getSwitchViewLink() { return switchViewLink; }

   protected String forwardActionLink = null;
   public void setForwardActionLink(String forwardActionLink) { this.forwardActionLink = forwardActionLink; }
   public String getForwardActionLink() { return forwardActionLink; }

   protected String backwardActionLink = null;
   public void setBackwardActionLink(String backwardActionLink) { this.backwardActionLink = backwardActionLink; }
   public String getBackwardActionLink() { return backwardActionLink; }

   protected String codeBase = null;
   public void setCodeBase(String codeBase) { this.codeBase = codeBase; }

   private int displayedMonth;
   public void setDisplayedMonth(int displayedMonth){ this.displayedMonth = displayedMonth; }
   public int getDisplayedMonth(){ return displayedMonth; }

   private int displayedYear;
   public void setDisplayedYear(int displayedYear){ this.displayedYear = displayedYear; }
   public int getDisplayedYear(){ return displayedYear; }

   private int displayedDay;
   public void setDisplayedDay(int displayedDay){ this.displayedDay = displayedDay; }
   public int getDisplayedDay(){ return displayedDay; }

   private SelectElement dateTypeSelector = null;
   public void setDateTypeSelector(SelectElement dateTypeSelector) { this.dateTypeSelector = dateTypeSelector; }

   private SelectElement projectTypeSelector = null;
   public void setProjectTypeSelector(SelectElement projectTypeSelector) { this.projectTypeSelector = projectTypeSelector; }

   private SelectElement labSelector = null;
   public void setLabSelector(SelectElement labSelector) { this.labSelector = labSelector; }

   private CheckBoxGroup displayItems = null;
   public void setDisplayItems(CheckBoxGroup displayItems) { this.displayItems = displayItems; }

   public ReportsBrowsingControl()
   {
      super();
   }

   public void render(JspWriter writer) throws Exception
   {

      WebCalendar calendar = WebCalendar.create(WebCalendar.GTF, view);
      calendar.setCodeBase(codeBase);
      calendar.setSwitchViewLink(switchViewLink);
      calendar.setSwitchTimeActionLink(switchTimeActionLink);
      calendar.setBackwardActionLink(backwardActionLink);
      calendar.setForwardActionLink(forwardActionLink);
      calendar.setDisplayedYear(displayedYear);
      calendar.setDisplayedMonth(displayedMonth);
      calendar.setDisplayedDay(displayedDay);

      writer.println( "      <table width=\"100%\" border=\"1\" cellspacing=\"0\" cellpadding=\"3\" bordercolorlight=\"#cccccc\" bordercolor=\"#cccccc\" bordercolordark=\"#ffffff\" bgcolor=\"#eaeaea\" align=\"center\" ID=\"Table4\">");
      writer.println( "        <tr>");
      writer.println( "          <td height=\"33\">");
      writer.println( "            <P>");
      writer.println( "              <font color=\"#000060\">Browse&nbsp;by&nbsp;" + browseBy[view] + ":</font></P>");
      writer.println( "          </td>");
      writer.println( "        </tr>");
      writer.println( "      </table>");

      calendar.render(writer);

      writer.println( "    <script language=\"JavaScript\" type=\"text/javascript\">");
      writer.println( "      //---------------------------------------");
      writer.println( "      function submitForm(frm, act) {");
      writer.println( "        fm = eval('document.'+ frm);");
      writer.println( "        fm.actiontype.value = act;");
      writer.println( "        fm.submit();");
      writer.println( "      }");
      writer.println( "    </script>");
      writer.println( "      <table width=\"100%\" border=\"1\" cellspacing=\"0\" cellpadding=\"3\" bordercolorlight=\"#cccccc\" bordercolor=\"#cccccc\" bordercolordark=\"#ffffff\" bgcolor=\"#eaeaea\" align=\"center\" ID=\"Table4\">");
      writer.println( "        <form  name=\"updateData\" action=\"/wf/reportsPanel.wf\" method=\"post\" id=\"update\">");
      writer.println( "        <input type=\"hidden\" name=\"actiontype\" value=\"\" id=\"actiontype.hidden\">");

      if(null!=dateTypeSelector)
      {
         dateTypeSelector.setOnChange("javascript:submitForm('updateData', 'updateData')");
         writer.println( "        <tr>");
         writer.println( "          <td nowrap align=\"left\" class=\"smallest\" height=\"6\">");
         writer.println( "             <FONT color=\"#000060\">Browse by&nbsp;:</FONT>");
         dateTypeSelector.printBody(writer);
         writer.println( "          </td>");
         writer.println( "        </tr>");
      }

      if(null!=projectTypeSelector)
      {
         projectTypeSelector.setOnChange("javascript:submitForm('updateData', 'updateData')");
         writer.println( "        <tr>");
         writer.println( "          <td nowrap align=\"left\" class=\"smallest\">");
         writer.println( "            <font color=\"#000060\">Project Type :</font>");
         projectTypeSelector.printBody(writer);
         writer.println( "          </td>");
         writer.println( "        </tr>");
      }

      if(null!=labSelector)
      {
         labSelector.setOnChange("javascript:submitForm('updateData', 'updateData')");
         writer.println( "        <tr>");
         writer.println( "          <td nowrap align=\"left\" class=\"smallest\" height=\"6\">");
         writer.println( "            <FONT color=\"#000060\">Lab&nbsp;Name:</FONT>");
         labSelector.printBody(writer);
         writer.println( "          </td>");
         writer.println( "        </tr>");
      }

      //if(null!=displayItems)
      //{
      //   displayItems.setOnClick("javascript:submitForm('updateData', 'updateData')");
      //   displayItems.printBody(writer);
      //}

      writer.print("      </form>");

      writer.println( "    <script language=\"JavaScript\" type=\"text/javascript\">");
      writer.println( "      //---------------------------------------");
      writer.println( "      function submitFormThenTargetTo(frm, act, tar) {");
      writer.println( "        fm = eval('document.'+ frm);");
      writer.println( "        fm.actiontype.value = act;");
      writer.println( "        fm.target = tar;");
      writer.println( "        fm.submit();");
      writer.println( "      }");
      writer.println( "    </script>");
      writer.println( "    <form name=\"" + id + "\" method=\"post\" action=\"" + actionLink + "\" ID=\"" + id + "\">");
      writer.println( "      <input type=\"hidden\" name=\"actiontype\" value=\"\" >");
      writer.println( "      <input type=\"hidden\" name=\"calendarView\" value=\"" + calendar.getType() + "\">");
      writer.println( "      <input type=\"hidden\" name=\"browseYear\" value=\"" + calendar.getDisplayedYear() +"\">");
      writer.println( "      <input type=\"hidden\" name=\"browseMonth\" value=\"" + calendar.getDisplayedMonth() +"\">");
      writer.println( "      <input type=\"hidden\" name=\"browseDay\" value=\"" + calendar.getDisplayedDay() +"\">");
      writer.println( "      <input type=\"hidden\" name=\"" + dateTypeSelector.getName() + "\" value=\"" + dateTypeSelector.getSelectedValue() + "\">");
      writer.println( "      <input type=\"hidden\" name=\"" + projectTypeSelector.getName() + "\" value=\"" + projectTypeSelector.getSelectedValue() + "\">");
      writer.println( "      <input type=\"hidden\" name=\"" + labSelector.getName() + "\" value=\"" + labSelector.getSelectedValue() + "\">");
      //String[] displayItemNames = displayItems.getValues();
      //for(int i=0; i<displayItemNames.length; i++)
      //{
      //   writer.println( "             <input type=\"hidden\" name=\"" + displayItems.getName() + "\" value=\"" + displayItemNames[i] + "\">");
      //}

      writer.println( "        <TR>");
      writer.println( "          <TD class=\"smallest\" noWrap align=\"left\">");
      this.renderSubcontrols(writer);
      writer.println( "          </TD>");
      writer.println( "        </TR>");
      writer.println( "    </form>");

      writer.println( "      </table>");
   }
}