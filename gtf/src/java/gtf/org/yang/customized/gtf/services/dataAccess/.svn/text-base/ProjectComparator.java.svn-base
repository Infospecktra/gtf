/* Generated by Together */

package org.yang.customized.gtf.services.dataAccess;
import java.util.Comparator;

public class ProjectComparator implements Comparator
{
   private String type = null;
   private boolean isAscending = true;

   /**
    * Call the constructor and set the id which represents this content.
    *
    * @param      id     the String indicates identification of this content.
    */
   //
   public ProjectComparator(String type, boolean isAscending)
   {
//System.out.println("Prepare Sort by:" + type + ", isAscending:" + isAscending);
      this.type = type;
      this.isAscending = isAscending;
   }
   //

   /**
    * Call the constructor and set the id which represents this content.
    *
    * @param      id     the String indicates identification of this content.
    */
   //
   public ProjectComparator(String type)
   {
      this(type, true);
   }
   //
   
   /**
    * Call the constructor and set the id which represents this content.
    *
    * @param      id     the String indicates identification of this content.
    */
   //
   public int compare(Object project1, Object project2)
   {
      if(null==project1||null==project2)
         throw new NullPointerException();

//System.out.println("Sort by:" + type);

      String key1 = null;
      String key2 = null;
      if("name".equals(type))
      {
         key1 = ((Project)project1).getName().toUpperCase();
         key2 = ((Project)project2).getName().toUpperCase();
      }
      else if("domain".equals(type))
      {
         key1 = ((Project)project1).getDomain();
         key2 = ((Project)project2).getDomain();
      }
      else if("investigator".equals(type))
      {
         key1 = ((Project)project1).getInvestigator();
         key2 = ((Project)project2).getInvestigator();
      }

//System.out.println("key1=" + key1 + ", key2=" + key2);

      if(null==key1)
         key1="";
      if(null==key2)
         key2="";

      return isAscending?key1.compareTo(key2):key2.compareTo(key1);
   }

   /**
    * Call the constructor and set the id which represents this content.
    *
    * @param      id     the String indicates identification of this content.
    */
   //
   public boolean equals(Object comparator)
   {
      return false;
   }
   //
}