/* Generated by Together */
package org.yang.customized.gtf.services.scheduleManager.web;

import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.WebControl;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.jsStyle.navigationList.NavigationList;
import org.yang.web.view.controls.jsStyle.navigationList.ListItem;
import org.yang.web.view.controls.jsStyle.ButtonElement;
import org.yang.web.view.controls.jsStyle.navigationList.List;
import java.util.Collection;
import java.util.Iterator;
import org.yang.customized.gtf.services.dataAccess.Project;
import org.yang.util.DateFormatter;
import org.yang.web.view.controls.jsStyle.HiddenField;
import org.yang.web.view.controls.jsStyle.panel.GenericPanel;
import org.yang.web.view.controls.jsStyle.panel.TabPanelElement;


public class ProjectNavigationListBuilder implements WebControlBuilder
{
   public WebControl build(GenericBean bean) throws Exception
   {
      ScheduleServiceBean scheduleBean = (ScheduleServiceBean)bean;
      String codeBase = scheduleBean.getAppBase() + scheduleBean.getGuiBase();

      GenericPanel panel = null;
      //if(null==(list=(NavigationList)scheduleBean.getControl("projectList")))
      //{
         panel = createPanel(scheduleBean, scheduleBean.getAppBase(), codeBase);
      //   scheduleBean.setControl("projectList", list);
      //}

      return panel;
   }

   private GenericPanel createPanel(ScheduleServiceBean scheduleBean, String appBase, String codeBase)
   {
      String[] allTabs  = scheduleBean.getAllAvailableProjectTypes();
      String currentTab = scheduleBean.getType();

      GenericPanel panel = new GenericPanel();
      panel.setId("projectlist_form");
      panel.setText("Managing waiting project list.");
      panel.setCodeBase(codeBase);
      panel.setColor("#C0C0C0");
      panel.setActionLink(appBase + "/projectList.wf");

      TabPanelElement typeTab = null;
      for(int i=0; i<allTabs.length; i++)
      {
         // project list
         NavigationList list = createList(scheduleBean, appBase, codeBase);
         typeTab = new TabPanelElement();
         typeTab.setText(allTabs[i]);
         typeTab.setCodeBase(codeBase);
         typeTab.setTabSwitchingLink("/wf/projectList.wf?actiontype=changeType&type=" + allTabs[i]);
         typeTab.addASubcontrol(list);

         if(allTabs[i].equals(currentTab))
            typeTab.setOnFocus(true);
         else
            typeTab.setOnFocus(false);

         panel.addASubcontrol(typeTab);
      }

      return panel;
   }

   private NavigationList createList(ScheduleServiceBean scheduleBean, String appBase, String codeBase)
   {
      NavigationList list = new NavigationList(new List());
      list.setTitle(null);
      list.setCodeBase(codeBase);
      list.setId("projectList");
      //list.setActionLink(appBase + "/projectList.wf");

      Project[] projects = scheduleBean.getAllProjectsSortingByProjectIDs();//getAllAvailableProjects();
      ListItem item = null;
      String id = null;
      for(int i=0; i<projects.length; i++)
      {
         id = projects[i].getId();
         item = new ListItem();
         item.setId(id);
         item.setText(projects[i].getName());
         item.setControlName("targetIds");
         item.setDisplayedDate(DateFormatter.convertDateTimeString(projects[i].getId(), "yyyy-MM-dd'T'HH:mm:ss"));
         item.setActionLink(appBase + "/project.wf?actiontype=load&id=" + id );
         if(i>0)
         {
            item.setIconUp( codeBase + "/images/arr_up.gif");
            item.setActionLinkUp(appBase + "/projectList.wf?actiontype=swap&idFrom=" + id + "&idTo=" + projects[i-1].getId());
         }
         if(i<projects.length-1)
         {
            item.setIconDown( codeBase + "/images/arr_down.gif");
            item.setActionLinkDown(appBase + "/projectList.wf?actiontype=swap&idFrom=" + id + "&idTo=" + projects[i+1].getId());
         }
         list.addListItem(item);
      }

      for(int j = projects.length; j<20; j++)
      {
         list.addListItem(new ListItem());
      }

      ButtonElement button1 = new ButtonElement();
      button1.setAction("javascript:setCheckBoxAll('projectlist_form','targetIds',1)");
      button1.setOnIcon(codeBase + "/images/ico_chkall.gif");
      button1.setOffIcon(codeBase + "/images/ico_chkall.gif");
      button1.setId("checkAll");
      button1.setName("checkAll");
      button1.setAlt("Check all");
      list.addButton(button1);
      ButtonElement button2 = new ButtonElement();
      button2.setAction("javascript:setCheckBoxAll('projectlist_form','targetIds',0)");
      button2.setOnIcon(codeBase + "/images/ico_unchkall.gif");
      button2.setOffIcon(codeBase + "/images/ico_unchkall.gif");
      button2.setId("uncheckAll");
      button2.setName("uncheckAll");
      button2.setAlt("Uncheck all");
      list.addButton(button2);

      return list;
   }
}