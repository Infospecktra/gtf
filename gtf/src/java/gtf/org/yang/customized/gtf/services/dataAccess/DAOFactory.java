/* Generated by Together */

package org.yang.customized.gtf.services.dataAccess;

import java.util.Hashtable;
import java.util.Properties;
import org.yang.services.dbService.RDBMS;
import org.yang.services.dbService.RDBMSFactory;
import org.yang.customized.gtf.services.dataAccess.TypeIDAOs.TypeIDAOFactoryImpl;
import org.yang.services.dataAccess.DataDAO;
import org.yang.customized.gtf.services.dataAccess.TimetableDAO;


public abstract class DAOFactory
{
    public static final String WAITING = "waiting";
    public static final String ONGOING = "ongoing";
    public static final String DONE    = "done";

    private static Hashtable myFactorys = new Hashtable();
    
    public static DAOFactory getFactory(Properties prop)
    {
       String key = prop.getProperty("DAOFactory.classname");
       return new TypeIDAOFactoryImpl();
    }

    abstract public ProjectDAO getProjectDAO(String type);

    abstract public StageDAO getStageDAO(String type);

    abstract public TimetableDAO getTimetableDAO();

    abstract public ScheduleDAO getScheduleDAO();

    abstract public DataDAO getDataDAO(String type);
}
