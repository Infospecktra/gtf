/* Generated by Together */
package org.yang.customized.gtf.services.messageManager.web;

import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.WebControl;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.jsStyle.UIForm;
import org.yang.web.view.controls.jsStyle.TextField;
import org.yang.web.view.controls.jsStyle.PassElement;
import org.yang.web.view.controls.jsStyle.SelectElement;
import org.yang.web.view.controls.jsStyle.TextAreaElement;
import org.yang.web.view.controls.jsStyle.ButtonElement;
import java.util.HashMap;
import java.util.Iterator;
import org.yang.customized.gtf.services.dataAccess.ProjectFactory;
import org.yang.customized.gtf.services.dataAccess.Project;
import org.yang.web.view.controls.jsStyle.WebControlGroup;
import org.yang.services.dataAccess.DataGroup;
import org.yang.services.dataAccess.Data;
import org.yang.web.view.controls.jsStyle.misc.MessageDisplayingBanner1;
import org.yang.customized.gtf.services.messageManager.MessageManager;
import org.yang.customized.gtf.services.dataAccess.Message;

public class MessageContentBuilder implements WebControlBuilder
{
   public WebControl build(GenericBean bean) throws Exception
   {
      MessageContentBean messageBean = (MessageContentBean)bean;
      String codeBase = messageBean.getAppBase() + messageBean.getGuiBase();
      Message currentMessage = messageBean.getCurrentMessage();

      WebControlGroup controlGroup = new WebControlGroup();
      if(GenericBean.ERR==messageBean.getState())
      {
         MessageDisplayingBanner1 banner = new MessageDisplayingBanner1();
         banner.setText(messageBean.getMsg());//"Some required field is empty, Please submit it again.");
         banner.setColor("#cc0000");
         controlGroup.addASubcontrol(banner);
      }

      // User permission
      //boolean xdomain = projectBean.gotPermit("ScheduleManager", currentProject.getType(), MessageManager.CROSS_DOMAIN);
      UIForm form = new UIForm();
      form.setCaption("Message Content");

      String domain = currentMessage.getDomainFrom();
      TextField messageFromDomain = new TextField();
      messageFromDomain.setTitle("From domain");
      messageFromDomain.setId("fromDomain");
      messageFromDomain.setName("fromDomain");
      messageFromDomain.setValue(domain);
      messageFromDomain.setIsReadOnly(true);
      form.addASubcontrol(messageFromDomain);

      TextField messageFromUser = new TextField();
      messageFromUser.setTitle("From user");
      messageFromUser.setId("fromUser");
      messageFromUser.setName("fromUser");
      messageFromUser.setValue(messageBean.whoIsIt(domain, currentMessage.getFromUser()));
      messageFromUser.setIsReadOnly(true);
      form.addASubcontrol(messageFromUser);

      TextField messagetitle = new TextField();
      messagetitle.setTitle("Tile");
      messagetitle.setSize("60");
      messagetitle.setId("title");
      messagetitle.setName("title");
      messagetitle.setValue(currentMessage.getTitle());
      messagetitle.setIsMandatory(true);
      form.addASubcontrol(messagetitle);

      TextAreaElement content = new TextAreaElement();
      content.setTitle("content");
      content.setCols("60");
      content.setRows("15");
      content.setId("message");
      content.setName("message");
      content.setValue(currentMessage.getMessage());
      form.addASubcontrol(content);
      controlGroup.addASubcontrol(form);

      ButtonElement save = new ButtonElement();
      if(-1==currentMessage.getId())
      {
         save.setAction("javascript:submitForm('projectInformation','create')");
         save.setAlt("New Message");
         save.setName("save");
         save.setOffIcon(codeBase + "/images/English/btn_create.gif");
         save.setOnIcon(codeBase + "/images/English/btn_create_on.gif");
         form.addAButton(save);
      }
      else
      {
         //save.setAction("javascript:submitForm('projectInformation','update')");
         //save.setAlt("Modify Message");
         //save.setName("save");
         //save.setOffIcon(codeBase + "/images/English/btn_update.gif");
         //save.setOnIcon(codeBase + "/images/English/btn_update_on.gif");
         //form.addAButton(save);

         //if(!currentMessage.getIsSent())
         //{
            ButtonElement send = new ButtonElement();
            send.setAction("javascript:submitForm('projectInformation','send')");
            send.setAlt("Update/Send Message");
            send.setName("send");
            send.setOffIcon(codeBase + "/images/English/btn_update.gif");
            send.setOnIcon(codeBase + "/images/English/btn_update.gif");
            form.addAButton(send);
         //}
      }


      return controlGroup;
   }
}