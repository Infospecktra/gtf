 /* Generated by Together */
package org.yang.customized.gtf.services.inventoryManager.web;

import java.util.Iterator;
import java.sql.Date;
import org.yang.util.SMUtility;
import org.yang.util.DateFormatter;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.WebControl;
import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.jsStyle.UIForm;
import org.yang.web.view.controls.jsStyle.TextField;
import org.yang.web.view.controls.jsStyle.PassElement;
import org.yang.web.view.controls.jsStyle.SelectElement;
import org.yang.web.view.controls.jsStyle.TextAreaElement;
import org.yang.web.view.controls.jsStyle.ButtonElement;
import org.yang.web.view.controls.jsStyle.dataSheet.DataSheet;
import org.yang.web.view.controls.jsStyle.dataSheet.DataRow;
import org.yang.web.view.controls.jsStyle.dataSheet.DataItem;
import org.yang.web.view.controls.jsStyle.dataSheet.TextItem;
import org.yang.web.view.controls.jsStyle.dataSheet.AccessIcon;
import org.yang.web.view.controls.jsStyle.dataSheet.DataSheetSet;
import org.yang.customized.gtf.services.dataAccess.Storage;
import org.yang.services.dataAccess.Data;
import org.yang.services.dataAccess.DataUnavailableException;
import org.yang.web.view.controls.jsStyle.misc.MessageDisplayingBanner;
import org.yang.customized.gtf.services.inventoryManager.InventoryManager;
import org.yang.customized.gtf.services.dataAccess.DateTextItem;
import org.yang.web.view.controls.jsStyle.dataSheet.SelectableItem;
import org.yang.customized.gtf.services.inventoryManager.utility.Utility;
import java.net.URLEncoder;
public class StorageMasterTableBuilder implements WebControlBuilder
{
   private StringBuffer sb = null;
   public WebControl build(GenericBean bean) throws Exception
   {
      StorageMasterTableBean storageMasterBean = (StorageMasterTableBean)bean;
      Storage[] storages = null;
      
      try
      {
         storages = storageMasterBean.getAllStorages();
      }
      catch(Exception e){}

      if(null==storages||0>=storages.length)      // if no inventory available
      {
         MessageDisplayingBanner banner = new MessageDisplayingBanner();
         banner.setText("No storage item is available.");
         banner.setColor("#c0c0c0");
         
         return banner;
      }
      String codeBase = storageMasterBean.getAppBase() + storageMasterBean.getGuiBase();
      DataSheetSet masterTableSet = null;
      if(null==(masterTableSet=(DataSheetSet)storageMasterBean.getControl("storageMasterTable")))
      {
          masterTableSet = createReportDetail(storageMasterBean, storages, codeBase,System.currentTimeMillis());
          storageMasterBean.setControl("storageMasterTable", masterTableSet);
      
      }
      else
      {
          masterTableSet = createReportDetail(storageMasterBean, storages, codeBase,System.currentTimeMillis());
          masterTableSet.getDatasheet("storageMasterTable").getPageNumberSelector().setSelectedValue(storageMasterBean.getPage());
      }
      
      masterTableSet.getDatasheet("storageMasterTable").sort(storageMasterBean.getSortBy(), storageMasterBean.getIsAcending());
      String currentStorageId ;      
      if(null!=storageMasterBean.getCurrentStorage())
      {
         currentStorageId = URLEncoder.encode(storageMasterBean.getCurrentStorage().getId());
         masterTableSet.setHighlightId(currentStorageId+"");
         masterTableSet.setHighlightColor("#00ffff");
      }
      
      return masterTableSet;
   }

   private DataSheetSet createReportDetail(StorageMasterTableBean storageMasterBean, Storage[] storages, String codeBase,long time)
   {
      DataSheetSet masterTableSet = new DataSheetSet();
      DataSheet sheet = new DataSheet();
      sheet.setId("storageMasterTable");
      sheet.setActionLink("/wf/storages.wf");
      sheet.setRowsPerPage(10);
      if(storages==null)
         storages = new Storage[0];
      sheet.setDataSizeNote("Total size : "+storages.length);

      SelectableItem paging = new SelectableItem();
      paging.setId("page");
      paging.setName("page");
      paging.setCaption("Select page");
      paging.setActionLink("/wf/storages.wf");
      paging.setActionTarget("_parent");
      paging.setOnChange("javascript:submitForm('" + paging.getId() + "','changePage')");
      //System.out.println("page----------------------->" + storageMasterBean.getPage());
      paging.setSelectedValue(storageMasterBean.getPage());
      paging.setNeedPromptOption(false);
      sheet.setPageNumberSelector(paging);
      masterTableSet.addDataSheet(sheet);

      DataRow row = null;
      TextItem item = null;
      String value = null;
      boolean iscurrentStorageId = false;
      AccessIcon icon = null;
      Boolean allChecked = new Boolean (storageMasterBean.getIsAllChecked());
      boolean isItemChecked = false;
     
      String id = "";
      String cell = "";
      String investigator = "";
      String labName = "";
      String projectCode = "";
      String parentalLine = "";
      String medium = "";
      String drugSelection = "";
      String location = "";
      int boxNumber = 0;
      String rowColumn = "";
      Date freezingDate = null;
      String comment = "";
      StringBuffer strBuffer = null;
      String[] searchKeys = storageMasterBean.getInputSearchKeys();
      String isSelectInvestigator = storageMasterBean.getInvestigator();
      String isSelectLabName = storageMasterBean.getLabName();
      
      if(searchKeys==null)
         searchKeys = new String[0];
        
      for(int i=0; i<storages.length; i++)
      { 
         try
         {
            isItemChecked = storages[i].getIsSelected();
            icon = new AccessIcon();
            icon.setName("All");
            icon.setIsSortable(false);
            icon.setActionTarget("_parent");
            long time2 = System.currentTimeMillis();
            if(!storageMasterBean.getIsAllChecked())
               icon.setTitleLink("/wf/storages.wf?actiontype=selectAll");
            else
               icon.setTitleLink("/wf/storages.wf?actiontype=deselectAll");

            id = URLEncoder.encode(storages[i].getId());
            cell = storages[i].getCell();
            projectCode = storages[i].getProjectCode();
            investigator = storages[i].getInvestigator();
            labName = storages[i].getLabName();
            parentalLine = storages[i].getParentalLine();
            medium = storages[i].getMedium();
            drugSelection = storages[i].getDrugSelection();
            location = storages[i].getLocation();
            boxNumber = storages[i].getBoxNumber();
            rowColumn = storages[i].getRowColumn();
            freezingDate = storages[i].getFreezingDate();
            comment = storages[i].getComment();
            /*           
            for(int x=0;x<searchKeys.length;x++)
            {
            System.out.println("XXXX---------------------------------->searchKeys["+x+"]="+searchKeys[x]);
            }
                         
            System.out.println("-------------------------------------->projectCode="+projectCode);
            System.out.println("-------------------------------------->cell="+cell);
            System.out.println("-------------------------------------->investigator="+investigator);
            System.out.println("-------------------------------------->labName="+labName);
            System.out.println("-------------------------------------->parentalLine="+parentalLine);
            System.out.println("-------------------------------------->medium="+medium);
            System.out.println("-------------------------------------->drugSelection="+drugSelection);
            System.out.println("-------------------------------------->location="+location);
            System.out.println("-------------------------------------->boxNumber="+boxNumber);
            System.out.println("-------------------------------------->rowColumn="+rowColumn);
            System.out.println("-------------------------------------->freezingDate="+freezingDate);
            System.out.println("-------------------------------------->comment="+comment);
            */
            if(isItemChecked)
            {
               icon.setActionLink("/wf/storages.wf?actiontype=deselect&id="+id);
               icon.setIcon(codeBase + "/images/checked.gif");
            }
            else
            {
               icon.setActionLink("/wf/storages.wf?actiontype=select&id="+id);
               icon.setIcon(codeBase + "/images/unchecked.gif");
            }
            row = new DataRow();
            row.addElement(icon);

            //Storage  informations
            row.setId(id+"");
           
            strBuffer = new StringBuffer("");
            strBuffer.append("ID : ")
                     .append(Utility.NAFormat(id));
                     
            // 1. cell
            item = new TextItem();
            item.setName("Cell");
            item.setId("cell");
            String fm_cell = Utility.NAFormat(cell);
            item.setText(fm_cell);
            item.setActionLink("/wf/storage.wf?actiontype=edit&id="+id);
            item.setActionTarget("_parent");
            if(!"n/a".equals(fm_cell))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            item.setAltText(strBuffer.toString());
            item.setBgcolor("#48d1cc");//#afeeee

            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(cell.trim()))
               {
                  item.setBgcolor("#3f0fff");//#afeeee
                  item.setColor("#CCCCCC");
               }   
            }
            item.setBold(true);
            row.addElement(item);

            // 2. investigator
            item = new TextItem();
            item.setName("Investigator");
            item.setId("investigator");
            String fm_investigator = Utility.NAFormat(investigator);
            item.setText(fm_investigator);
            if(!"n/a".equals(fm_investigator))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            item.setBgcolor("#C1A5FC");
            //System.out.println("[StorageMasterTableBuilder:]-----isSelectInvestigator="+isSelectInvestigator);
            //System.out.println("[StorageMasterTableBuilder:]-----storageMasterBean.getLastActiontype()="+storageMasterBean.getLastActiontype());
            if(null!=isSelectInvestigator &&
                  !"".equals(isSelectInvestigator) &&
                  !"  Please select".equals(isSelectInvestigator)&&
                  "search".equals(storageMasterBean.getLastActiontype()))
                  //(!"toUploadeFileMasterTable".equals(storageMasterBean.getLastActiontype())&&
                  // !"loadCacheData".equals(storageMasterBean.getLastActiontype())&&
                  // !"toRightFrameService".equals(storageMasterBean.getLastActiontype())))
            {
                  item.setBgcolor("#3f0fff");    
                  item.setColor("#CCCCCC");
            }
            row.addElement(item);
            
            // 3. lab name
            String fm_labName = Utility.NAFormat(labName);
            item = new TextItem();
            item.setName("Lab Name");
            item.setId("labName");
            item.setText(fm_labName);
            //item.setAltText(strBuffer.toString());
            if(!"n/a".equals(fm_labName))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            
            if(null!=isSelectLabName &&
               !"".equals(isSelectLabName) &&
               !"  Please select".equals(isSelectLabName)&&
               "search".equals(storageMasterBean.getLastActiontype()))
               //(!"toUploadeFileMasterTable".equals(storageMasterBean.getLastActiontype())&&
               // !"loadCacheData".equals(storageMasterBean.getLastActiontype())&&
               // !"toRightFrameService".equals(storageMasterBean.getLastActiontype())))
            {
               item.setBgcolor("#3f0fff");//#9370db
               item.setColor("#CCCCCC");
            }   
            row.addElement(item);

            // 4. projectCode
            item = new TextItem();
            item.setName("Project#");
            item.setId("projectCode");
            String fm_projectCode = Utility.NAFormat(projectCode);
            item.setText(fm_projectCode);
            if(!"n/a".equals(fm_projectCode))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(projectCode))
               {
                  item.setBgcolor("#3f0fff");//#9370db
                  item.setColor("#CCCCCC");
               }               
            }
            row.addElement(item);

             // 5. parentalLine
            item = new TextItem();
            item.setName("Parental");
            item.setId("parentalLine");
            String fm_parentalLine = Utility.NAFormat(parentalLine);
            item.setText(fm_parentalLine);
            if(!"n/a".equals(fm_parentalLine))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(parentalLine))
               {
                  item.setBgcolor("#3f0fff");//#9370db
                  item.setColor("#CCCCCC");
               }               
            }
            row.addElement(item);

            // 6. medium
            String fm_medium = Utility.NAFormat(medium);
            item = new TextItem();
            item.setName("Medium");
            item.setId("medium");
            item.setText(fm_medium);
            if(!"n/a".equals(fm_medium))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            item.setBgcolor("#A6FA54");//#7cfc00   
            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(medium.trim()))
               {
                  item.setBgcolor("#3f0fff");//#9370db
                  item.setColor("#CCCCCC");
               }               
            }
            row.addElement(item);


            // 7. drugSelection
            String fm_drugSelection = Utility.NAFormat(drugSelection);
            item = new TextItem();
            item.setName("Drug Selection");
            item.setId("drugSelection");
            item.setText(fm_drugSelection);
            item.setBgcolor("#FFFF9C");

            if(!"n/a".equals(fm_drugSelection))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(drugSelection))
               {
                  item.setBgcolor("#3f0fff");//#9370db
                  item.setColor("#CCCCCC");
               }               
            }
            row.addElement(item);

            // 8. location
            String fm_location = Utility.NAFormat(location);
            item = new TextItem();
            item.setName("Location");
            item.setId("location");
            item.setBgcolor("#C1A5FC");// #3f0ffff
            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(location))
               {
                  item.setBgcolor("#3f0fff");//#9370db
                  item.setColor("#CCCCCC");
               }               
            }            
            item.setText(fm_location);
            if(!"n/a".equals(fm_location))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            row.addElement(item);

            //9. boxNumber
            item = new TextItem();
            item.setName("Box#");
            item.setId("boxNumer");
            String fm_boxNumber = "";
            if(boxNumber==0)
            {
              fm_boxNumber = "n/a";
              item.setColor("#3f0fff");
            }
            else
            {
               fm_boxNumber = boxNumber + "";	
               item.setColor("#000066");
               
            }
            item.setText(fm_boxNumber);
            item.setBgcolor("#ffe4e1");//
            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(boxNumber+""))
               {
                  item.setBgcolor("#3f0fff");//#9370db
                  item.setColor("#CCCCCC");
               }               
            }                   
            row.addElement(item);

            //10. rowColumn
            String fm_rowColumn = Utility.NAFormat(rowColumn);
            item = new TextItem();
            item.setName("Row/Col");
            item.setId("rowColumn");
            item.setBgcolor("#da70d6");// #3f0ffff
          
            item.setText(fm_rowColumn);
            if(!"n/a".equals(fm_rowColumn))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            
            for(int x=0;x<searchKeys.length;x++)
            {
               if(searchKeys[x].equals(rowColumn))
               {
                  item.setBgcolor("#3f0fff");//#9370db
                  item.setColor("#CCCCCC");
               }               
            }        
            row.addElement(item);

            //11. freezingDate
            String str_freezingDate = Utility.dateFormat(freezingDate,"MM/dd/yyyy");
            item = new TextItem();
            item.setName("Freezing Date");
            item.setId("freezingDate");
            item.setText(str_freezingDate);
            item.setBgcolor("#ffc0cd");
            if(!"n/a".equals(str_freezingDate))
               item.setColor("#000066");
            else
               item.setColor("#3f0fff");
            boolean isDateHighlight = false;    
            int x=0;	
            do
            {	
               //System.out.println("[StorageMasterTableBuilder.jsp]------>searchKeys["+x+"]="+searchKeys[x]);	
               //System.out.println("[StorageMasterTableBuilder.jsp]------>searchKeys[x].indexOf(20)>-1="+new Boolean(searchKeys[x].indexOf("20")>-1));	
               //System.out.println("[StorageMasterTableBuilder.jsp]------>searchKeys[x].indexOf(19)>-1"+new Boolean(searchKeys[x].indexOf("19")>-1));	
               if(searchKeys.length!=0)
               {
                  if(!(searchKeys[x].indexOf("20")>-1||searchKeys[x].indexOf("19")>-1))
                     item.setBgcolor("#e9967a");// #ddaodd
                  else
                  {  // highlight 
                     item.setBgcolor("#3f0fff");//#9370db
                     item.setColor("#CCCCCC");
                     isDateHighlight = true;
                  }   
                  x++;
               }	   
            }while(x<searchKeys.length&&!isDateHighlight);            
            row.addElement(item);
            
         }
         catch(Exception e)
         {
              e.printStackTrace();
         }
         sheet.addDataRow(row);
        
      }
      return masterTableSet;
   }
}