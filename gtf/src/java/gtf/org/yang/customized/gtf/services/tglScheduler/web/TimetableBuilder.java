/* Generated by Together */
package org.yang.customized.gtf.services.tglScheduler.web;

import org.yang.web.view.controls.WebControlBuilder;
import org.yang.web.view.controls.WebControl;
import org.yang.web.controller.GenericBean;
import org.yang.web.view.controls.jsStyle.UIForm;
import org.yang.web.view.controls.jsStyle.TextField;
import org.yang.web.view.controls.jsStyle.PassElement;
import org.yang.web.view.controls.jsStyle.SelectElement;
import org.yang.web.view.controls.jsStyle.TextAreaElement;
import org.yang.web.view.controls.jsStyle.ButtonElement;
import java.util.HashMap;
import java.util.Iterator;
import org.yang.customized.gtf.services.dataAccess.ProjectFactory;
import org.yang.customized.gtf.services.dataAccess.Project;
import org.yang.web.view.controls.jsStyle.WebControlGroup;
import org.yang.services.dataAccess.DataGroup;
import org.yang.services.dataAccess.Data;
import org.yang.web.view.controls.jsStyle.misc.MessageDisplayingBanner1;
import org.yang.customized.gtf.services.scheduleManager.ScheduleManager;
import org.yang.customized.gtf.services.dataAccess.Timetable;
import org.yang.customized.gtf.services.tglScheduler.Scheduler;
import org.yang.customized.gtf.services.dataAccess.Schedule;
import org.yang.web.view.controls.jsStyle.DateField;
import org.yang.web.view.controls.jsStyle.FormElement;

public class TimetableBuilder implements WebControlBuilder
{
   public WebControl build(GenericBean bean) throws Exception
   {
      TimetableBean timetableBean = (TimetableBean)bean;
      String codeBase = timetableBean.getAppBase() + timetableBean.getGuiBase();
      Timetable currentTimetable = timetableBean.getCurrentTimetable();
      Project currentProject = timetableBean.getCurrentProject();

      WebControlGroup controlGroup = new WebControlGroup();

      if(GenericBean.ERR==timetableBean.getState())
      {
         MessageDisplayingBanner1 banner = new MessageDisplayingBanner1();
         banner.setText(timetableBean.getMsg());
         banner.setColor("#cc0000");
         controlGroup.addASubcontrol(banner);
      }

      // User permission
      boolean xdomain = timetableBean.gotPermit("Scheduler", currentTimetable.getProjectType(), Scheduler.CROSS_DOMAIN);

      UIForm form = new UIForm();
      form.setCaption("Basic Information");

      TextField type = new TextField();
      type.setTitle("project type");
      type.setId("type");
      type.setName("type");
      type.setValue(currentTimetable.getProjectType());
      type.setDisplayOnly(true);
      form.addASubcontrol(type);

      TextField projectId = new TextField();
      projectId.setTitle("project ID");
      projectId.setId("id");
      projectId.setName("id");
      projectId.setValue(currentTimetable.getId());
      projectId.setIsReadOnly(true);
      form.addASubcontrol(projectId);

      TextField projectname = new TextField();
      projectname.setTitle("project name");
      projectname.setId("name");
      projectname.setName("name");
      projectname.setValue(currentProject.getName());
      projectname.setIsReadOnly(true);
      form.addASubcontrol(projectname);

      controlGroup.addASubcontrol(form);

      Schedule[] schedules = currentTimetable.getSchedules();
      Data[] scheduleDatas = null;
      TextField data = null;
      Iterator it = null;
      String name = null;
      java.sql.Date sDueDate = null;
      for(int i=0; i<schedules.length; i++)
      {
         form = new UIForm();
         form.setCaption(schedules[i].getDisplayName());

         DateField sDueDateElement = new DateField();
         sDueDateElement.setIsYearFirst(false);
         sDueDateElement.setTitle("due date");
         sDueDateElement.setId("dueDate");
         sDueDateElement.setName("dueDate");
         sDueDateElement.setOnChangeLink("submitForm('timetable','onChange')");
         sDueDateElement.setDisplayOnly(true);
         sDueDateElement.setYear(schedules[i].getDueDate().getYear()+1900);
         sDueDateElement.setMonth(schedules[i].getDueDate().getMonth());
         sDueDateElement.setDate(schedules[i].getDueDate().getDate());
         form.addASubcontrol(sDueDateElement);

         if(i==schedules.length-1)
         {
            ButtonElement help = new ButtonElement();
            help.setAction("javascript:top.topFrame.openSWHelpWindow('" + codeBase + "/help/English/help.jsp?right=schedule.htm#project')");
            help.setName("help");
            help.setOffIcon(codeBase + "/images/English/btn_help.gif");
            help.setOnIcon(codeBase + "/images/English/btn_help_on.gif");
            help.setAlt("Help");
            form.addAButton(help);
         }
         controlGroup.addASubcontrol(form);
      }
      return controlGroup;
   }
}